--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]


local Player = game:GetService("Players").LocalPlayer;
local UIS = game:GetService("UserInputService");
local TweenService = game:GetService("TweenService");
local supportedGames = {[107476030760322]="Cart-Ride-into-Spiderman",[9458832163]="Cart-Ride-into-El-gato",[12841354936]="Escape-Digital-Circus-Cart-Ride"};
local currentGameId = game.PlaceId;
local isSupportedGame = supportedGames[currentGameId] ~= nil;
local replicatedStorage = game:GetService("ReplicatedStorage");
local hasSkipEndEvent = replicatedStorage:FindFirstChild("Events") and replicatedStorage.Events:FindFirstChild("SkipEndEvent");
local hasKillEvent = replicatedStorage:FindFirstChild("Events") and replicatedStorage.Events:FindFirstChild("KillEvent");
local function CreateMessageBox(title, message, options)
	local ScreenGui = Instance.new("ScreenGui");
	ScreenGui.Name = "MessageBoxGUI";
	ScreenGui.Parent = game:GetService("CoreGui");
	local MainFrame = Instance.new("Frame");
	MainFrame.Name = "MainFrame";
	MainFrame.Size = UDim2.new(0, 300, 0, 200);
	MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100);
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
	MainFrame.BorderSizePixel = 0;
	MainFrame.Active = true;
	MainFrame.Draggable = true;
	MainFrame.Parent = ScreenGui;
	local Title = Instance.new("TextLabel");
	Title.Name = "Title";
	Title.Size = UDim2.new(1, 0, 0, 30);
	Title.Position = UDim2.new(0, 0, 0, 0);
	Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
	Title.TextColor3 = Color3.fromRGB(255, 255, 255);
	Title.Text = title;
	Title.Font = Enum.Font.GothamBold;
	Title.TextSize = 14;
	Title.Parent = MainFrame;
	local Message = Instance.new("TextLabel");
	Message.Name = "Message";
	Message.Size = UDim2.new(1, -20, 1, -80);
	Message.Position = UDim2.new(0, 10, 0, 40);
	Message.BackgroundTransparency = 1;
	Message.TextColor3 = Color3.fromRGB(255, 255, 255);
	Message.Text = message;
	Message.Font = Enum.Font.Gotham;
	Message.TextSize = 12;
	Message.TextWrapped = true;
	Message.Parent = MainFrame;
	local ButtonsFrame = Instance.new("Frame");
	ButtonsFrame.Name = "ButtonsFrame";
	ButtonsFrame.Size = UDim2.new(1, -20, 0, 30);
	ButtonsFrame.Position = UDim2.new(0, 10, 1, -40);
	ButtonsFrame.BackgroundTransparency = 1;
	ButtonsFrame.Parent = MainFrame;
	local UIListLayout = Instance.new("UIListLayout");
	UIListLayout.FillDirection = Enum.FillDirection.Horizontal;
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center;
	UIListLayout.Padding = UDim.new(0, 10);
	UIListLayout.Parent = ButtonsFrame;
	for i, option in ipairs(options) do
		local Button = Instance.new("TextButton");
		Button.Name = option.text .. "Button";
		Button.Size = UDim2.new(0.5, -10, 1, 0);
		Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		Button.TextColor3 = Color3.fromRGB(255, 255, 255);
		Button.Text = option.text;
		Button.Font = Enum.Font.Gotham;
		Button.TextSize = 12;
		Button.Parent = ButtonsFrame;
		Button.MouseButton1Click:Connect(function()
			option.callback();
			ScreenGui:Destroy();
		end);
	end
	return ScreenGui;
end
local function CreateGameSelectionUI()
	local ScreenGui = Instance.new("ScreenGui");
	ScreenGui.Name = "GameSelectionGUI";
	ScreenGui.Parent = game:GetService("CoreGui");
	local MainFrame = Instance.new("Frame");
	MainFrame.Name = "MainFrame";
	MainFrame.Size = UDim2.new(0, 300, 0, 250);
	MainFrame.Position = UDim2.new(0.5, -150, 0.5, -125);
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
	MainFrame.BorderSizePixel = 0;
	MainFrame.Active = true;
	MainFrame.Draggable = true;
	MainFrame.Parent = ScreenGui;
	local Title = Instance.new("TextLabel");
	Title.Name = "Title";
	Title.Size = UDim2.new(1, 0, 0, 30);
	Title.Position = UDim2.new(0, 0, 0, 0);
	Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
	Title.TextColor3 = Color3.fromRGB(255, 255, 255);
	Title.Text = "SELECT SUPPORTED GAME";
	Title.Font = Enum.Font.GothamBold;
	Title.TextSize = 14;
	Title.Parent = MainFrame;
	local CloseButton = Instance.new("TextButton");
	CloseButton.Name = "CloseButton";
	CloseButton.Size = UDim2.new(0, 30, 0, 30);
	CloseButton.Position = UDim2.new(1, -30, 0, 0);
	CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50);
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	CloseButton.Text = "X";
	CloseButton.Font = Enum.Font.GothamBold;
	CloseButton.TextSize = 14;
	CloseButton.Parent = MainFrame;
	CloseButton.MouseButton1Click:Connect(function()
		ScreenGui:Destroy();
	end);
	local GamesFrame = Instance.new("ScrollingFrame");
	GamesFrame.Name = "GamesFrame";
	GamesFrame.Size = UDim2.new(1, -20, 1, -50);
	GamesFrame.Position = UDim2.new(0, 10, 0, 40);
	GamesFrame.BackgroundTransparency = 1;
	GamesFrame.CanvasSize = UDim2.new(0, 0, 0, #supportedGames * 40);
	GamesFrame.Parent = MainFrame;
	local UIListLayout = Instance.new("UIListLayout");
	UIListLayout.Padding = UDim.new(0, 10);
	UIListLayout.Parent = GamesFrame;
	for gameId, gameName in pairs(supportedGames) do
		local GameButton = Instance.new("TextButton");
		GameButton.Name = gameName .. "Button";
		GameButton.Size = UDim2.new(1, 0, 0, 30);
		GameButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		GameButton.TextColor3 = Color3.fromRGB(255, 255, 255);
		GameButton.Text = gameName;
		GameButton.Font = Enum.Font.Gotham;
		GameButton.TextSize = 12;
		GameButton.Parent = GamesFrame;
		GameButton.MouseButton1Click:Connect(function()
			game:GetService("TeleportService"):Teleport(gameId);
		end);
	end
	return ScreenGui;
end
local function CreateClientUI()
	local ScreenGui = Instance.new("ScreenGui");
	ScreenGui.Name = "ClientGUI";
	ScreenGui.Parent = game:GetService("CoreGui");
	local MainFrame = Instance.new("Frame");
	MainFrame.Name = "MainFrame";
	MainFrame.Size = UDim2.new(0, 300, 0, 200);
	MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100);
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
	MainFrame.BorderSizePixel = 0;
	MainFrame.Active = true;
	MainFrame.Draggable = true;
	MainFrame.Parent = ScreenGui;
	local Title = Instance.new("TextLabel");
	Title.Name = "Title";
	Title.Size = UDim2.new(1, 0, 0, 30);
	Title.Position = UDim2.new(0, 0, 0, 0);
	Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
	Title.TextColor3 = Color3.fromRGB(255, 255, 255);
	Title.Text = "CLIENT GUI";
	Title.Font = Enum.Font.GothamBold;
	Title.TextSize = 14;
	Title.Parent = MainFrame;
	local CloseButton = Instance.new("TextButton");
	CloseButton.Name = "CloseButton";
	CloseButton.Size = UDim2.new(0, 30, 0, 30);
	CloseButton.Position = UDim2.new(1, -30, 0, 0);
	CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50);
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	CloseButton.Text = "X";
	CloseButton.Font = Enum.Font.GothamBold;
	CloseButton.TextSize = 14;
	CloseButton.Parent = MainFrame;
	CloseButton.MouseButton1Click:Connect(function()
		ScreenGui:Destroy();
	end);
	local ButtonsFrame = Instance.new("Frame");
	ButtonsFrame.Name = "ButtonsFrame";
	ButtonsFrame.Size = UDim2.new(1, -20, 1, -50);
	ButtonsFrame.Position = UDim2.new(0, 10, 0, 40);
	ButtonsFrame.BackgroundTransparency = 1;
	ButtonsFrame.Parent = MainFrame;
	local UIListLayout = Instance.new("UIListLayout");
	UIListLayout.Padding = UDim.new(0, 10);
	UIListLayout.Parent = ButtonsFrame;
	local function CreateButton(text, callback)
		local Button = Instance.new("TextButton");
		Button.Name = text .. "Button";
		Button.Size = UDim2.new(1, 0, 0, 30);
		Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		Button.TextColor3 = Color3.fromRGB(255, 255, 255);
		Button.Text = text;
		Button.Font = Enum.Font.Gotham;
		Button.TextSize = 12;
		Button.Parent = ButtonsFrame;
		Button.MouseButton1Click:Connect(callback);
		return Button;
	end
	local speedEnabled = false;
	local jumpEnabled = false;
	local respawnEnabled = false;
	local originalWalkSpeed = 16;
	local originalJumpPower = 50;
	local function ToggleSpeed()
		speedEnabled = not speedEnabled;
		local button = ButtonsFrame:FindFirstChild("Speed (x3)Button");
		if button then
			button.BackgroundColor3 = (speedEnabled and Color3.fromRGB(50, 255, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if (Player.Character and Player.Character:FindFirstChild("Humanoid")) then
			if speedEnabled then
				Player.Character.Humanoid.WalkSpeed = originalWalkSpeed * 3;
			else
				Player.Character.Humanoid.WalkSpeed = originalWalkSpeed;
			end
		end
		Player.CharacterAdded:Connect(function(character)
			character:WaitForChild("Humanoid");
			if speedEnabled then
				character.Humanoid.WalkSpeed = originalWalkSpeed * 3;
			else
				character.Humanoid.WalkSpeed = originalWalkSpeed;
			end
		end);
	end
	local function ToggleJump()
		jumpEnabled = not jumpEnabled;
		local button = ButtonsFrame:FindFirstChild("High Jump (x3)Button");
		if button then
			button.BackgroundColor3 = (jumpEnabled and Color3.fromRGB(50, 255, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if (Player.Character and Player.Character:FindFirstChild("Humanoid")) then
			if jumpEnabled then
				Player.Character.Humanoid.JumpPower = originalJumpPower * 3;
			else
				Player.Character.Humanoid.JumpPower = originalJumpPower;
			end
		end
		Player.CharacterAdded:Connect(function(character)
			character:WaitForChild("Humanoid");
			if jumpEnabled then
				character.Humanoid.JumpPower = originalJumpPower * 3;
			else
				character.Humanoid.JumpPower = originalJumpPower;
			end
		end);
	end
	local function ToggleRespawn()
		respawnEnabled = not respawnEnabled;
		local button = ButtonsFrame:FindFirstChild("Respawn at Death PosButton");
		if button then
			button.BackgroundColor3 = (respawnEnabled and Color3.fromRGB(50, 255, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if respawnEnabled then
			Player.CharacterAdded:Connect(function(character)
				local humanoid = character:WaitForChild("Humanoid");
				local hrp = character:WaitForChild("HumanoidRootPart");
				humanoid.Died:Connect(function()
					local deathPos = hrp.Position;
					character:WaitForChild("HumanoidRootPart", 10);
					if character:FindFirstChild("HumanoidRootPart") then
						character.HumanoidRootPart.CFrame = CFrame.new(deathPos);
					end
				end);
			end);
		end
	end
	CreateButton("Speed (x3)", ToggleSpeed);
	CreateButton("High Jump (x3)", ToggleJump);
	CreateButton("Respawn at Death Pos", ToggleRespawn);
	local dragging;
	local dragInput;
	local dragStart;
	local startPos;
	local function update(input)
		local delta = input.Position - dragStart;
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y);
	end
	MainFrame.InputBegan:Connect(function(input)
		if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (input.UserInputType == Enum.UserInputType.Touch)) then
			dragging = true;
			dragStart = input.Position;
			startPos = MainFrame.Position;
			input.Changed:Connect(function()
				if (input.UserInputState == Enum.UserInputState.End) then
					dragging = false;
				end
			end);
		end
	end);
	MainFrame.InputChanged:Connect(function(input)
		if ((input.UserInputType == Enum.UserInputType.MouseMovement) or (input.UserInputType == Enum.UserInputType.Touch)) then
			dragInput = input;
		end
	end);
	UIS.InputChanged:Connect(function(input)
		if ((input == dragInput) and dragging) then
			update(input);
		end
	end);
end
if isSupportedGame then
	local ScreenGui = Instance.new("ScreenGui");
	ScreenGui.Name = "ServerGUI";
	ScreenGui.Parent = game:GetService("CoreGui");
	local MainFrame = Instance.new("Frame");
	MainFrame.Name = "MainFrame";
	MainFrame.Size = UDim2.new(0, 300, 0, 350);
	MainFrame.Position = UDim2.new(0.5, -150, 0.5, -175);
	MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
	MainFrame.BorderSizePixel = 0;
	MainFrame.Active = true;
	MainFrame.Draggable = true;
	MainFrame.Parent = ScreenGui;
	local Title = Instance.new("TextLabel");
	Title.Name = "Title";
	Title.Size = UDim2.new(1, 0, 0, 30);
	Title.Position = UDim2.new(0, 0, 0, 0);
	Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
	Title.TextColor3 = Color3.fromRGB(255, 255, 255);
	Title.Text = "SERVERSIDE GUI";
	Title.Font = Enum.Font.GothamBold;
	Title.TextSize = 14;
	Title.Parent = MainFrame;
	local CloseButton = Instance.new("TextButton");
	CloseButton.Name = "CloseButton";
	CloseButton.Size = UDim2.new(0, 30, 0, 30);
	CloseButton.Position = UDim2.new(1, -30, 0, 0);
	CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50);
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	CloseButton.Text = "X";
	CloseButton.Font = Enum.Font.GothamBold;
	CloseButton.TextSize = 14;
	CloseButton.Parent = MainFrame;
	CloseButton.MouseButton1Click:Connect(function()
		ScreenGui:Destroy();
	end);
	local ButtonsFrame = Instance.new("Frame");
	ButtonsFrame.Name = "ButtonsFrame";
	ButtonsFrame.Size = UDim2.new(1, -20, 1, -50);
	ButtonsFrame.Position = UDim2.new(0, 10, 0, 40);
	ButtonsFrame.BackgroundTransparency = 1;
	ButtonsFrame.Parent = MainFrame;
	local UIListLayout = Instance.new("UIListLayout");
	UIListLayout.Padding = UDim.new(0, 10);
	UIListLayout.Parent = ButtonsFrame;
	local function CreateButton(text, callback)
		local Button = Instance.new("TextButton");
		Button.Name = text .. "Button";
		Button.Size = UDim2.new(1, 0, 0, 30);
		Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		Button.TextColor3 = Color3.fromRGB(255, 255, 255);
		Button.Text = text;
		Button.Font = Enum.Font.Gotham;
		Button.TextSize = 12;
		Button.Parent = ButtonsFrame;
		Button.MouseButton1Click:Connect(callback);
		return Button;
	end
	local function SkipEnd()
		local args = {[1]="a=Instance.new('Model',workspace)a.Name='yYdWzqdLNUYkrjwPDFkvo'"};
		game:GetService("ReplicatedStorage").Events.SkipEndEvent:FireServer(unpack(args));
	end
	local function KillAll()
		local args = {[1]="a=Instance.new('Model',workspace)a.Name='wsUdkiJlFXMMPddjqggWkdxbWKX'"};
		game:GetService("ReplicatedStorage").Events.KillEvent:FireServer(unpack(args));
	end
	local webSlingTarget = "All";
	local webSlingEnabled = false;
	local webSlingLoop = nil;
	local crashLoop = nil;
	local crashEnabled = false;
	local function FindPlayerByName(partialName)
		partialName = partialName:lower();
		for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
			if player.Name:lower():find(partialName) then
				return player;
			end
		end
		return nil;
	end
	local function ToggleWebSlingTarget()
		local inputGui = Instance.new("ScreenGui");
		inputGui.Name = "WebSlingInputGUI";
		inputGui.Parent = game:GetService("CoreGui");
		local inputFrame = Instance.new("Frame");
		inputFrame.Name = "InputFrame";
		inputFrame.Size = UDim2.new(0, 250, 0, 150);
		inputFrame.Position = UDim2.new(0.5, -125, 0.5, -75);
		inputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
		inputFrame.BorderSizePixel = 0;
		inputFrame.Active = true;
		inputFrame.Draggable = true;
		inputFrame.Parent = inputGui;
		local title = Instance.new("TextLabel");
		title.Name = "Title";
		title.Size = UDim2.new(1, 0, 0, 30);
		title.Position = UDim2.new(0, 0, 0, 0);
		title.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
		title.TextColor3 = Color3.fromRGB(255, 255, 255);
		title.Text = "Enter Player Name (partial)";
		title.Font = Enum.Font.GothamBold;
		title.TextSize = 14;
		title.Parent = inputFrame;
		local inputBox = Instance.new("TextBox");
		inputBox.Name = "InputBox";
		inputBox.Size = UDim2.new(1, -20, 0, 30);
		inputBox.Position = UDim2.new(0, 10, 0, 40);
		inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		inputBox.TextColor3 = Color3.fromRGB(255, 255, 255);
		inputBox.Text = "";
		inputBox.Font = Enum.Font.Gotham;
		inputBox.TextSize = 12;
		inputBox.PlaceholderText = "Enter partial name or 'all'";
		inputBox.Parent = inputFrame;
		local buttonsFrame = Instance.new("Frame");
		buttonsFrame.Name = "ButtonsFrame";
		buttonsFrame.Size = UDim2.new(1, -20, 0, 30);
		buttonsFrame.Position = UDim2.new(0, 10, 1, -40);
		buttonsFrame.BackgroundTransparency = 1;
		buttonsFrame.Parent = inputFrame;
		local listLayout = Instance.new("UIListLayout");
		listLayout.FillDirection = Enum.FillDirection.Horizontal;
		listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center;
		listLayout.Padding = UDim.new(0, 10);
		listLayout.Parent = buttonsFrame;
		local confirmButton = Instance.new("TextButton");
		confirmButton.Name = "ConfirmButton";
		confirmButton.Size = UDim2.new(0.5, -10, 1, 0);
		confirmButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		confirmButton.TextColor3 = Color3.fromRGB(255, 255, 255);
		confirmButton.Text = "Confirm";
		confirmButton.Font = Enum.Font.Gotham;
		confirmButton.TextSize = 12;
		confirmButton.Parent = buttonsFrame;
		local cancelButton = Instance.new("TextButton");
		cancelButton.Name = "CancelButton";
		cancelButton.Size = UDim2.new(0.5, -10, 1, 0);
		cancelButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
		cancelButton.TextColor3 = Color3.fromRGB(255, 255, 255);
		cancelButton.Text = "Cancel";
		cancelButton.Font = Enum.Font.Gotham;
		cancelButton.TextSize = 12;
		cancelButton.Parent = buttonsFrame;
		confirmButton.MouseButton1Click:Connect(function()
			local inputText = inputBox.Text:lower();
			if ((inputText == "all") or (inputText == "")) then
				webSlingTarget = "All";
			else
				local player = FindPlayerByName(inputText);
				if player then
					webSlingTarget = player.Name;
				else
					webSlingTarget = "All";
				end
			end
			inputGui:Destroy();
			local button = ButtonsFrame:FindFirstChild("Web Sling TargetButton");
			if button then
				button.Text = "Web Sling Target: " .. webSlingTarget;
			end
		end);
		cancelButton.MouseButton1Click:Connect(function()
			inputGui:Destroy();
		end);
	end
	local function ToggleWebSling()
		webSlingEnabled = not webSlingEnabled;
		local button = ButtonsFrame:FindFirstChild("Web SlingButton");
		if button then
			button.BackgroundColor3 = (webSlingEnabled and Color3.fromRGB(50, 255, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if webSlingEnabled then
			webSlingLoop = game:GetService("RunService").Heartbeat:Connect(function()
				pcall(function()
					local character = Player.Character;
					if character then
						local tool = character:FindFirstChild("web sling") or Player.Backpack:FindFirstChild("web sling");
						if tool then
							tool.Parent = character;
							local target = nil;
							if (webSlingTarget ~= "All") then
								target = game:GetService("Players"):FindFirstChild(webSlingTarget);
							end
							if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
								local args = {[1]=1,[2]=target.Character.HumanoidRootPart.Position};
								tool.UserInput:FireServer(unpack(args));
							elseif (webSlingTarget == "All") then
								for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
									if ((player ~= Player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
										local args = {[1]=1,[2]=player.Character.HumanoidRootPart.Position};
										tool.UserInput:FireServer(unpack(args));
									end
								end
							end
						end
					end
				end);
			end);
		elseif webSlingLoop then
			webSlingLoop:Disconnect();
			webSlingLoop = nil;
		end
	end
	local function NewCrashServer()
		crashEnabled = not crashEnabled;
		local button = ButtonsFrame:FindFirstChild("Crash ServerButton");
		if button then
			button.BackgroundColor3 = (crashEnabled and Color3.fromRGB(255, 50, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if crashEnabled then
			KillAll();
			crashLoop = game:GetService("RunService").Heartbeat:Connect(function()
				if not crashEnabled then
					return;
				end
				if (#game:GetService("Players"):GetPlayers() <= 1) then
					crashEnabled = false;
					if button then
						button.BackgroundColor3 = Color3.fromRGB(50, 50, 50);
					end
					return;
				end
				KillAll();
				local vulnerableNumbers = {math.huge,-math.huge,NaN,(math.huge * 0),(1 / 0),(-1 / 0)};
				pcall(function()
					local character = Player.Character;
					if character then
						local tool = character:FindFirstChild("web sling") or Player.Backpack:FindFirstChild("web sling");
						if tool then
							tool.Parent = character;
							for _, num in ipairs(vulnerableNumbers) do
								local args = {[1]=num,[2]=Vector3.new(num, num, num)};
								tool.UserInput:FireServer(unpack(args));
							end
						end
					end
				end);
			end);
		elseif crashLoop then
			crashLoop:Disconnect();
			crashLoop = nil;
		end
	end
	local loopKillEnabled = false;
	local lastDeathPositions = {};
	local loopKillConnection = nil;
	local killLoop = nil;
	local function LoopKillAll()
		loopKillEnabled = not loopKillEnabled;
		local button = ButtonsFrame:FindFirstChild("Loop Kill AllButton");
		if button then
			button.BackgroundColor3 = (loopKillEnabled and Color3.fromRGB(255, 50, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if loopKillEnabled then
			for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
				if (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
					lastDeathPositions[player.Name] = player.Character.HumanoidRootPart.Position;
				end
			end
			KillAll();
			killLoop = game:GetService("RunService").Heartbeat:Connect(function()
				if not loopKillEnabled then
					return;
				end
				KillAll();
				wait(2.5);
				for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
					if lastDeathPositions[player.Name] then
						pcall(function()
							if (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
								player.Character.HumanoidRootPart.CFrame = CFrame.new(lastDeathPositions[player.Name]);
							end
						end);
					end
				end
			end);
			loopKillConnection = game:GetService("Players").PlayerAdded:Connect(function(player)
				player.CharacterAdded:Connect(function(character)
					character:WaitForChild("Humanoid").Died:Connect(function()
						if character:FindFirstChild("HumanoidRootPart") then
							lastDeathPositions[player.Name] = character.HumanoidRootPart.Position;
						end
					end);
				end);
			end);
			for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
				if player.Character then
					player.Character:WaitForChild("Humanoid").Died:Connect(function()
						if (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then
							lastDeathPositions[player.Name] = player.Character.HumanoidRootPart.Position;
						end
					end);
				end
				player.CharacterAdded:Connect(function(character)
					character:WaitForChild("Humanoid").Died:Connect(function()
						if character:FindFirstChild("HumanoidRootPart") then
							lastDeathPositions[player.Name] = character.HumanoidRootPart.Position;
						end
					end);
				end);
			end
		else
			if killLoop then
				killLoop:Disconnect();
				killLoop = nil;
			end
			if loopKillConnection then
				loopKillConnection:Disconnect();
				loopKillConnection = nil;
			end
			lastDeathPositions = {};
		end
	end
	local platform = nil;
	local platformEnabled = false;
	local platformConnection = nil;
	local platformDescentSpeed = 0.5;
	local function ToggleFlyingPlatform()
		platformEnabled = not platformEnabled;
		local button = ButtonsFrame:FindFirstChild("Flying PlatformButton");
		if button then
			button.BackgroundColor3 = (platformEnabled and Color3.fromRGB(50, 255, 50)) or Color3.fromRGB(50, 50, 50);
		end
		if platformEnabled then
			platform = Instance.new("Part");
			platform.Name = "FlyingPlatform";
			platform.Size = Vector3.new(15, 1, 15);
			platform.Anchored = true;
			platform.CanCollide = true;
			platform.Transparency = 0.7;
			platform.Material = Enum.Material.Neon;
			platform.Color = Color3.fromRGB(100, 200, 255);
			platform.Parent = workspace;
			if (Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")) then
				local hrp = Player.Character.HumanoidRootPart;
				platform.Position = hrp.Position - Vector3.new(0, 4, 0);
				platform.Orientation = Vector3.new(0, hrp.Orientation.Y, 0);
			end
			platformConnection = game:GetService("RunService").Heartbeat:Connect(function(dt)
				if (not platform or not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart")) then
					return;
				end
				local hrp = Player.Character.HumanoidRootPart;
				local currentPos = platform.Position;
				local targetY = hrp.Position.Y - 4;
				if ((Player.Character.Humanoid:GetState() == Enum.HumanoidStateType.Running) or (Player.Character.Humanoid:GetState() == Enum.HumanoidStateType.RunningNoPhysics) or (Player.Character.Humanoid:GetState() == Enum.HumanoidStateType.GettingUp) or (Player.Character.Humanoid:GetState() == Enum.HumanoidStateType.Landed)) then
					targetY = currentPos.Y - (platformDescentSpeed * dt);
				else
					targetY = math.max(currentPos.Y, hrp.Position.Y - 4);
				end
				local targetX = hrp.Position.X;
				local targetZ = hrp.Position.Z;
				local newX = currentPos.X + ((targetX - currentPos.X) * 0.1);
				local newZ = currentPos.Z + ((targetZ - currentPos.Z) * 0.1);
				platform.Position = Vector3.new(newX, targetY, newZ);
				platform.Orientation = Vector3.new(0, hrp.Orientation.Y, 0);
			end);
		else
			if platform then
				platform:Destroy();
				platform = nil;
			end
			if platformConnection then
				platformConnection:Disconnect();
				platformConnection = nil;
			end
		end
	end
	CreateButton("Skip End", SkipEnd);
	CreateButton("Kill All", KillAll);
	CreateButton("Loop Kill All", LoopKillAll);
	CreateButton("Flying Platform", ToggleFlyingPlatform);
	CreateButton("Web Sling", ToggleWebSling);
	CreateButton("Web Sling Target: All", ToggleWebSlingTarget);
	CreateButton("Crash Server", NewCrashServer);
	CreateButton("Open Client GUI", CreateClientUI);
	local dragging;
	local dragInput;
	local dragStart;
	local startPos;
	local function update(input)
		local delta = input.Position - dragStart;
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y);
	end
	MainFrame.InputBegan:Connect(function(input)
		if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (input.UserInputType == Enum.UserInputType.Touch)) then
			dragging = true;
			dragStart = input.Position;
			startPos = MainFrame.Position;
			input.Changed:Connect(function()
				if (input.UserInputState == Enum.UserInputState.End) then
					dragging = false;
				end
			end);
		end
	end);
	MainFrame.InputChanged:Connect(function(input)
		if ((input.UserInputType == Enum.UserInputType.MouseMovement) or (input.UserInputType == Enum.UserInputType.Touch)) then
			dragInput = input;
		end
	end);
	UIS.InputChanged:Connect(function(input)
		if ((input == dragInput) and dragging) then
			update(input);
		end
	end);
elseif (hasSkipEndEvent and hasKillEvent) then
	CreateMessageBox("Script Detected", "This game might support this script. Do you want to try running it?", {{text="Yes",callback=function()
	end},{text="No",callback=function()
	end}});
else
	CreateMessageBox("Unsupported Game", "This game is not supported by this script. Would you like to teleport to a supported game?", {{text="Yes",callback=function()
		CreateGameSelectionUI();
	end},{text="No",callback=function()
	end}});
end
